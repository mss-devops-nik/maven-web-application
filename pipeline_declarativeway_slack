pipeline{
	agent any 
	tools {
		maven "Maven 3.8.5"
	}
	triggers {
  		pollSCM '* * * * *'
	}
	options {
  		buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  		timestamps()
	}
	stages{
		stage('Checkoutcode'){
			steps {
				git branch: 'development', credentialsId: 'a3e13267-aac5-40d7-973a-1bb63fc184a9', url: 'https://github.com/mss-devops-nik/maven-web-application/'
				sendSlackNotifications('STARTED')
			}
		}
		stage('Build') {
			steps {
				sh "mvn clean package"
			}
		}
		stage('SonarqubeReport') {
			steps {
				sh "mvn sonar:sonar"
			}
		}
		stage('DeployBuildToNexus') {
			steps {
				sh "mvn deploy"
			}
		}
		stage('TomcatDeploy') {
			steps {
				sshagent(['1be37b39-11dd-470f-8124-432736279306']) {
					sh "scp target/maven-web-application.war ec2-user@172.31.36.168:/opt/apache-tomcat-9.0.63/webapps/"
				}
			}
		}
	}
	post {
			success {
				sendSlackNotifications('SUCCESSFUL')
			}
			failure {
				sendSlackNotifications('Failure')
			}
		}
}

def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
